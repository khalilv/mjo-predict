seed_everything: 42

# ---------------------------- TRAINER -------------------------------------------
trainer:
  default_root_dir: /glade/derecho/scratch/kvirji/mjo-predict/exps/TSMixer/historical_only/
  precision: 32

  devices: 1
  num_nodes: 1
  accelerator: gpu
  strategy:     
    class_path: pytorch_lightning.strategies.DDPStrategy
    init_args:
      timeout: 02:00:00
      # find_unused_parameters: true

  min_epochs: 1
  max_epochs: 500
  enable_progress_bar: true

  sync_batchnorm: false
  enable_checkpointing: true

  gradient_clip_val: 1.0

  # debugging
  fast_dev_run: false

  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}/logs
      name: null
      version: null
      log_graph: false
      default_hp_metric: true
      prefix: ""

  callbacks:
    # - class_path: pytorch_lightning.callbacks.LearningRateFinder
    #   init_args:
    #     attr_name: "lr"

    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

    - class_path: mjo.utils.callbacks.GradientMonitor
      init_args:
        log_every_n_steps: 50

    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "${trainer.default_root_dir}/checkpoints"
        monitor: "val/mse_norm" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        save_top_k: 1 # save k best models (determined by above metric)
        save_last: true # additionaly always save model from last epoch
        verbose: false
        filename: "epoch_{epoch:03d}"
        auto_insert_metric_name: false

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: "val/mse_norm" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        patience: 5 # how many validation epochs of not improving until training stops
        min_delta: 0. # minimum change in the monitored metric needed to qualify as an improvement

    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1

    - class_path: pytorch_lightning.callbacks.RichProgressBar

# ---------------------------- MODEL -------------------------------------------
model:
  pretrained_path: ""
  past_cov_dim: 0
  future_cov_dim: 0
  static_cov_dim: 0
  nr_params: 1
  hidden_size: 512
  ff_size: 512
  num_blocks: 8
  activation: "ReLU"
  dropout: 0.6
  norm_type: "TimeBatchNorm2d"
  normalize_before: true
  lr: 1.0e-4
  beta_1: 0.9
  beta_2: 0.99
  weight_decay: 1e-5
  warmup_steps: 1000
  save_outputs: true


# ---------------------------- DATA -------------------------------------------
data:
  root_dir: /glade/derecho/scratch/kvirji/DATA/preprocessed/MJO/reference_period_1979-09-07_to_2001-12-31
  in_variables:
    - "RMM1"
    - "RMM2"
  out_variables:
    - "RMM1"
    - "RMM2"
  predictions: [1,2,3,4,5,6,7,8,9,10]
  history: [-60,-59,-58,-57,-56,-55,-54,-53,-52,-51,-50,-49,-48,-47,-46,-45,-44,-43,-42,-41,-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1]
  normalize_data: true
  max_buffer_size: 10000
  batch_size: 32
  num_workers: 0
  pin_memory: true