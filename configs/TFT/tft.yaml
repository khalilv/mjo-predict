seed_everything: 42

# ---------------------------- TRAINER -------------------------------------------
trainer:
  default_root_dir: /glade/derecho/scratch/kvirji/mjo-predict/exps/TFT/test
  precision: 32

  devices: 1
  num_nodes: 1
  accelerator: cpu
  strategy: auto     
    # class_path: pytorch_lightning.strategies.DDPStrategy
    # init_args:
    #   timeout: 02:00:00
      # find_unused_parameters: true

  min_epochs: 1
  max_epochs: 250
  enable_progress_bar: true

  sync_batchnorm: false
  enable_checkpointing: true

  gradient_clip_val: 1.0

  # debugging
  fast_dev_run: false

  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}/logs
      name: null
      version: null
      log_graph: false
      default_hp_metric: true
      prefix: ""

  callbacks:
    # - class_path: pytorch_lightning.callbacks.LearningRateFinder
    #   init_args:
    #     attr_name: "lr"

    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

    - class_path: mjo.utils.callbacks.GradientMonitor
      init_args:
        log_every_n_steps: 50

    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "${trainer.default_root_dir}/checkpoints"
        monitor: "val/mse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        save_top_k: 1 # save k best models (determined by above metric)
        save_last: true # additionaly always save model from last epoch
        verbose: false
        filename: "epoch_{epoch:03d}"
        auto_insert_metric_name: false

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: "val/mse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        patience: 10 # how many validation epochs of not improving until training stops
        min_delta: 0. # minimum change in the monitored metric needed to qualify as an improvement

    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1

    - class_path: pytorch_lightning.callbacks.RichProgressBar

# ---------------------------- MODEL -------------------------------------------
model:
  pretrained_path: ""
  date_variables: ['year', 'doy_sin', 'doy_cos']
  known_future_variables: ['RMM1_forecast', 'RMM2_forecast', 'forecast_mask']
  num_static_components: 0
  hidden_size: 32
  lstm_layers: 1
  num_attention_heads: 8
  full_attention: false
  feed_forward: "GatedResidualNetwork"
  hidden_continuous_size: 32
  add_relative_index: false
  dropout: 0.5
  norm_type: "LayerNorm"
  lr: 1.5e-5
  beta_1: 0.87
  beta_2: 0.99
  weight_decay: 7.5e-4
  warmup_steps: 1000
  max_steps: 50000
  save_outputs: true

# ---------------------------- DATA -------------------------------------------
data:
  root_dir: /glade/derecho/scratch/kvirji/DATA/MJO/U250/preprocessed
  forecast_dir: /glade/derecho/scratch/kvirji/DATA/MJO/U250/preprocessed/FuXi
  load_forecast_members: false
  load_forecast_samples: true
  forecast_length: 42
  ensemble_members: 1
  in_variables:
    - "RMM1"
    - "RMM2"
  out_variables:
    - "RMM1"
    - "RMM2"
  predictions: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60]
  history: []
  filter_mjo_events: false
  normalize_data: true
  max_buffer_size: 100
  batch_size: 8
  num_workers: 0
  pin_memory: true